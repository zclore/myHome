# [20.1]
1.
死锁：由于竞争资源或者通信关系，两个或更多线程在执行时出现，永远等待只能由其他进程引发的事件。
2.
单向通行桥梁
3.
可重用资源：资源不能被删除且任何时刻只有一个进程使用，进程释放资源后，其他进程可重用。
消耗资源：资源创建和销毁。
4.
- 顶点：系统中所有进程或系统中所有资源。
- 有向边：资源请求或资源分配。
5.
死锁的必要条件：
- 互斥
- 持有并等待
- 非抢占
- 循环等待
# [20.2]
1.
处理方法：
- 死锁预防：确保系统永远不会进入死锁状态。
- 死锁避免：在使用前进行判断，只允许不会出现死锁的进程请求资源。
- 死锁检测和恢复：在检测到运行系统进入死锁状态后，进行恢复。
2.
安全序列：进程的最大资源需要量小于当前可用资源与序列中前面进程占用资源的总和；
3.
安全：一定不会出现死锁</br>
不安全：可能出现死锁</br>
死锁：
# [20.3]
1.
银行家算法：依据客户申请贷款的最大资金量，银行在每笔贷款前判断贷款后系统是否处于安全状态
2.
是一回事。存在安全序列表示处于安全状态。
# [20.4]
1.
死锁检测是在资源分配后判断是否存在死锁；没有进程最大资源请求量的要求；</br>
安全状态判断是资源分配前依据进程最大资源请求量判断是否存在安全序列；</br>
死锁检测、安全状态判断和安全序列判断的本质就是资源分配图中的循环等待判断。
# [20.5]
1.
本质上来说，直接通信可以理解为两个直接通信，间接通信中假定有一个永远有效的直接通信方。
2.
同步通信：通信收方和发方都会等待收发成功后才返回。</br>
异步通信：通信收方和发方在完成数据发送或已有数据接收后立即返回，不会等待收发成功信息；
# [20.6]
1.
信号：进程间软件中断通知和处理机制
2.
信号通信特点：类似于中断，信号通信速度快；信息量小，只有一个信号类型值；
3.
管道：管道是进程间基于内存文件的通信机制。
4.
# [20.7]
1.
由操作系统维护的以字节序列为基本单位的间接通信机制。
2.



















