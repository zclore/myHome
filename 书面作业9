# 9.1
1.
影响因素：进程的页面访问规律（访问模式、访问频度）</br>
评判标准：记录并统计产生缺页的次数
2.
全局置换算法不区分这个页面属于哪个进程，局部页面置换算法是对一个进程中给定的几个页面进行置换。
# 9.2
1.
最优算法：置换在未来最长时间不会被访问的页面。实际无法实现，可以作为评测置换算法性能的依据。
先进先出算法（FIFO）：选择在内存驻留时间最长的页面进行置换。维护一个记录所有位于内存的逻辑页面链表。
最近最久未使用算法（LRU）：选择最长时间没有被引用的页面进行置换。计算内存中每个逻辑页面的上一次访问时间。1.维护一个按最近一次访问时间排序的页面的链表。2.活动页面栈
# 9.3
1.
时钟算法：对页面的访问情况进行大致统计。页表项增加访问位，页面组织成环形链表，指针指向最先调入的页面。
2.
增加修改位
3.
最不常用算法：缺页时，置换访问次数最少的页面。
# 9.4
1.
Belady现象：分配的物理页面数增加，缺页次数反而升高。</br>
判定：判断方法：构造反例或证明是栈式置换算法
2.
# 9.5
1.
相互促进和制约。
2.
工作集，一个进程当前正在使用的逻辑页面的集合。
3.
长驻集：当前时刻，进程驻留在内存当中的页面集合
4.
维护一个访存链表，访存是换出不在工作集的页面，更新访存链表，缺页时，换入页面，更新访存链表。
# 9.6
1.
调节常驻集的大小，使得每个进程的缺页率保持在一个合理的范围。缺页率过高，增加常驻集，缺页率过低，减少常驻集。
# 9.7
1.
抖动：进程物理页太少，不能包含工作集，造出大量缺页，频繁置换，进程运行速度缓慢。
2.
MTBF = PFST
3.
局部置换算法不能作为全局置换算法使用；因为进程切换会导致进程占用的页面被全部换出。
