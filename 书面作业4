# 思考题
## [4.1]
1.
- 高13位：GDT的index
- TI：一般值0
- RPL2位:段的优先级级别
2.
- DPL是数据的保密级别，DPL存储在段描述符中，规定访问该段的权限级别，每个段的DPL固定。
前代码段试图访问一个段或者门时，其DPL将会和当前特权级CPL以及段或门的选择子比较，根据段或者门的类型不同，DPL的含义不同：
    1.数据段的DPL：规定了访问此段的最低权限。比如一个数据段的DPL是1，那么只有运行在CPL为0或1的程序才可能访问它。为什么说可能呢？因为还有一个比较的因素是RPL。访问数据段要满足有效特权级别（上述）高于数据段的DPL.
    2.非一致代码段的DPL(不使用调用门的情况)：DPL规定访问此段的特权，只有CPL与之相等才有可能访问。
    3.调用门的DPL，规定了程序或任务访问该门的最低权限。与数据段同。
    4.一致代码段和通过调用门访问的非一致代码段，DPL规定访问此段的最高权限。
     比如一个段的DPL为2，那么CPL为0或者1的程序都无法访问。
   5. TSS的DPL，同数据段。
- RPL是用户程序调用系统代码去访问数据时，要求系统代码采用的访问权限或访问的保密级别，RPL保存在选择子的最低两位。。处理器通过检查RPL和CPL来确认一个访问是否合法。即提出访问的段除了有足够的特权级CPL，如果RPL不够也是不行的(有些情况会忽略RPL检查)。
- CRL是代码本身的访问权限级别，存在于cs寄存器的低两位，可以被等级相同或者更低特权级的代码访问
## [4.4]
1.
一些寄存器的内容：如一些Error Code标志，EIP,CS当前被打断的地址（或下一条地址），EFLASS当前被打断的标志性内容等
不同：用户态会多压入esp,ss
2.
- 安全原因.若用低权限的外部堆栈保存控制寄存器的信息不安全
- 任务切换必须发生在内核态.
3.
当控制权通过中断门进入中断处理程序时,trap不关中断，interrupt关中断。若不做区分，可能会浪费计算机的资源
## [4.8]
在调用函数是，ebp指针的值基本不发生变化，可以用内联函数，而eip的值经常发生变化，若用内联会出错。
## [4.9]
是，就是在CPU初始时设置中断使能标志。

# 开放思考题
4.
如果没有中断，操作系统不能回的系统控制权，无法按照调度算法对处理机进行重新分配，一个程序将一直运行到结束而不被打断。能完成，可能会占用很多资源。

   

