# 7.1
1.
4个
2.
内核处于0特权级，特权指令只能在0特权级执行，应用程序处于3特权级，不同特权级访问的数据和使用的指令不一样
3.
这三者结合可以进行判断当前操作是否能够正常通过特权级的检查。
DPL:访问段和中断门的特权级
CPL:当前代码段的特权级
RPL：进程对段访问的请求权限
访问门时：CPL <= DPL[门] & CPL >= DPL[段]  
访问段时：MAX(CPL, RPL) <= DPL[段]
4.
# 7.2
1.
ring0到ring3，ring3到ring0的判断
2.
中断
3.
ring3中断会多存一些信息ss,ESP,而且还有栈的切换。
4.
人工构造需要的栈结构，然后通过int和iret指令进行切换
5.
TSS:保存不同特权级使用的寄存器的信息。

Task register:缓存TSS段的内容。
# 7.3
1.
2次
2.
段机制：通过一系列寄存器高位作为索引找到GDT中的项，即是段描述符，加上offset就是线性地址。
页机制：虚拟地址分为3段，Directory,Table,offset,先用Directory查找页目录表中对应的PDE，在根据Table查找页表中PTE,再加上偏移就是物理地址。
# 7.4
1.
2.
ucore建立页表：分配页目录表，初始化，再分配页表。将0xc0000000~0xF8000000虚拟地址映射到0x00000000-0x38000000物理地址，将0x00000000-0x00100000的虚拟地址映射到0x00000000-0x00100000的物理地址的对等映射。使能页机制，更新GDT,释放对等映射。









