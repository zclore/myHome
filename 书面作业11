# [11.1]
1.
程序：静态可执行文件.
进程：具有一定独立功能的程序在一个数据集合上一次动态执行的过程。
2.
代码，数据，状态寄存器，通用寄存器，进程占用系统资源。
3.
独立性:不同进程的工作不相互影响。</br>
制约性：因访问共享数据/资源或进程间同步而产生制约。
4.
联系：程序是进程的组成之一；同一个程序可对应多个不同进程；</br>
区别：进程是动态的过程，程序是静态的代码序列；进程是暂时的，程序是永久的；
# [11.2]
1.
管理和控制进程运行
2.
进程标识信息，处理机的现场保护，进程控制信息
3.
# [11.3]
1.
进程生命周期：创建、执行、等待、抢占、唤醒、结束.</br>
进程状态变迁事件：抢占、唤醒、结束等
# [11.4]
1.
运行：占用CPU执行指令</br>
就绪：已获取所有其他资源，等待CPU资源</br>
等待：等待某事件，处理暂停状态</br>
转换事件：启动、进入就绪队列、被调度、等待事件、时间片用完、事件发生、结束
# [11.5]
1.
为减少进程占用内存而把进程控制信息映像到外存中
2.
就绪被分成了就绪挂起和就绪两个状态</br>
等待被分成了等待挂起和等待两个状态</br>
多了两个变迁：激活和挂起
3.
进程内核栈被放到外存
# [11.6]
1.
在同一地址空间内实现并发的函数执行
2.
线程是进程中描述指令流执行状态的组成部分，是CPU调度的基本单位
3.
进程是资源分配单位,线程是CPU调度单位,进程内的多个线程共享相同的地址空间.
# [11.7]
1.
用户线程是以用户函数库形式提供的线程实现机制
2.
用户地址空间
# [11.8]
1.
用户线程是由函数库在用户态实现的线程机制；</br>
内核线程是由内核通过系统调用调用实现的线程机制；</br>
区别：实现方式、TCB的保存位置、运行开销、线程阻塞的影响范围
2.
用户线程是可以的
3.
不可以
























