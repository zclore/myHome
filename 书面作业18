# [18.1]
1.
信号量是操作系统提供的一种协调共享资源访问的方法。</br>
软件同步方法是一种平等线程间的一种同步协商机制。</br>
信号量：OS是管理者，地位高于进程。
2.
自旋锁有TS指令实现的临界区申请操作，第一个检测到临界区空闲的申请者而不是第一个开始检测的申请者进入。
3.
不能。
# [18.2]
1.
条件同步：线程见的时间等待。
</br>
定义初始值为零的信号量，事件触发进程使用V()操作表示事件出现，事件等待进程使用P()操作表示开始等待事件。
2.
生产者-消费者问题：一个或多个生产者在生成数放在一个缓冲区里，单个消费者从缓冲区取出数据处理，任何时刻只能有一个生产者或消费者可以访问缓冲区。
3.
可能出现循环等待。
4.
信号量中的整形变量的取值不同，互斥信号量的最大取值为1；而资源信号量的最大取值为资源总数；
# [18.3]
1.
管程是一种并发程序的编程方法，由一个与入口队列对应的锁和若干个与共享数据访问的等待队列对应的条件变量组成，从而实现在任一时刻最多只有一个线程执行管程代码；
2.
相同点：在任一时刻最多只有一个线程执行管程代码或临界区代码；

不同：正在管程中的线程可临时放弃管程的互斥访问，等待事件出现时恢复；而临界区不支持临时退出；
3.
管程允许临时放弃管程的互斥访问，而信号量并不支持临时放弃互斥访问权；
4.
Mesa管程：占用管程的当前进程可在任何时刻释放占用资源并唤醒相应的等待进程，当前进程继续执行，被唤醒放回入口队列队首等待当前进程释放管程访问权；

Hoare管程：占用管程的当前进程可在任何时刻释放占用资源并唤醒相应的等待进程，当前进程进入唤醒队列等待，被唤醒进程继续执行直到释放管程访问权；管程空闲时，优先查看唤醒队列中的等待进程，唤醒队列中没有等待进程时再查看入口队列；

Hansen管程：占用管程的当前进程只在退出管程时释放占用资源并唤醒相应的等待进程，被唤醒进程继续执行直到释放管程访问权；

条件判断中while和if对释放处理中的执行顺序影响：

在Hansen和Mesa管程中，由于条件变量释放操作signal时并没有立即放弃管程访问权，资源的可用状态可能变化，需使用while()进行重新检查；

在Hoare管程中，由于条件变量释放操作signal同时表示立即放弃管程访问权，资源的可用状态保持不变，可使用if判断，不需要再次检查。

# [18.5]
1.
- 读优先：有读者正在读，且有写者等待时，后到的读者可开始读；
- 写优先：有读者正在读，且有写者等待时，后到的读者不能开始读；
2.
互斥信号WriteMutex
# [18.6]




















