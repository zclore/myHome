# 8.1
1.
寄存器：快，一种直接整合到cpu中的有限的高速访问速度的存储器，CPU访问，存储一些使用频繁的指令，访问频繁。
高速缓存：较快，存放在CPU中，存储CPU常用的数据，CPU访问，访问频繁
内存：慢，访问不频繁。动态存贮数据的器件，即存贮的数据会因其掉电而消失。它是CPU通过总线寻址，暂存CPU的运算数据，以及与硬盘等外部存贮器交换的数据的重要存贮部件。
外存：最慢，访问最不频繁。指运算系统之外的存贮设备，掉电也不会丢失数据。
2.
均衡繁忙是指，各种存储介质都处理繁忙状态，但又不构成系统瓶颈；
3.
有，比如宽度优先搜索，可以加上剪枝。
# 8.2
1.
覆盖：依据程序的逻辑结构，把程序划分成若干功能相对独立的模块，将不会同时执行的模块共享同一块内存区域。
主要工作：划分功能模块，确定模块的覆盖关系
2.
交换：作为一个整体的进程地址空间的换入和换出
覆盖：只发生在没有调用关系的模块间，程序员需给出模块间的逻辑覆盖结构，发生在运行程序的内部模块间。
交换：以进程为单位，不需要模块间的逻辑覆盖结构，发生在内存进程之间
3.
覆盖技术主要用在早期的操作系统中，而交换技术则在现代操作系统中仍具有较强的生命力。
中级调度（策略）就是釆用交换技术。
4.
5.
静态代码分析、动态函数调用跟踪
# 8.3
1.
时间局部性：一条指令的连续两次执行，一个数据的连续两次访问集中在一个较短的时期内。
空间局部性：相邻访问的两条指令，两个数据集中在一个较小区域
分支局部性：一条跳转指令的两次执行，很可能跳到相同的位置
2.
有意识地规范程序跳转和数据访问
3.
# 8.4
1.
虚拟存储：只把当前指令执行需要的部分页面或段载入内存。处理器通知操作系统将相应的页面和段调入内存。
区别：
不连续性：物理内存分配不连续，虚拟地址空间使用非连续
大用户空间：提供的用户虚拟内存课大于实际的物理内存 部分交换：虚拟存储只对部分虚拟地址空间进行调入调出。
优点：更大存储，更快速度。
缺点：实现更复杂。
2.
硬件：页式或段式存储的地址转化机制.
操作系统：管理内存和外存间页面或段的换入或换出。
# 8.5
1.
虚拟页式存储：在页式存储管理的基础上，增加请求调页和页面置换。
缺页中断处理的功能：将外存中对应的页面调到内存中
2.
多加标志位。
驻留位：表示该页是否在内存
修改位：表示在内存中该页是否被修改过
访问位：表示该页面是否被访问过
保护位：表示该页允许访问的方式
3.
虚拟页式存储增加请求调页和页面置换。
# 8.6
1.
6步：
- 指令执行中的页表项引用；
- 由于页面不在内存，导致缺页异常；
- 在外存中查找需要访问的页面备份；
- 页面换入；
- 页表项修改；
- 重新执行导致缺页异常的指令；
2.
EAT = 访存时间 * (1-p) + 缺页异常处理时间 * 缺页率p




